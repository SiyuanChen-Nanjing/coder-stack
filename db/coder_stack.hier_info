|encoder_top_parallel
clock => clock.IN6
reset => reset.IN1
cbs_ready => cbs_ready.IN1
cbs_blocksize => block_size.DATAB
cbs_fifo_empty => cbs_fifo_rreq.DATAIN
int_ready => int_ready.IN1
cbs_din[0] => cbs_din[0].IN1
cbs_din[1] => cbs_din[1].IN1
cbs_din[2] => cbs_din[2].IN1
cbs_din[3] => cbs_din[3].IN1
cbs_din[4] => cbs_din[4].IN1
cbs_din[5] => cbs_din[5].IN1
cbs_din[6] => cbs_din[6].IN1
cbs_din[7] => cbs_din[7].IN1
int_din[0] => int_din[0].IN1
int_din[1] => int_din[1].IN1
int_din[2] => int_din[2].IN1
int_din[3] => int_din[3].IN1
int_din[4] => int_din[4].IN1
int_din[5] => int_din[5].IN1
int_din[6] => int_din[6].IN1
int_din[7] => int_din[7].IN1
xk_out[0] << tailBitsGenerator_parallel:mytail.xk_out
xk_out[1] << tailBitsGenerator_parallel:mytail.xk_out
xk_out[2] << tailBitsGenerator_parallel:mytail.xk_out
xk_out[3] << tailBitsGenerator_parallel:mytail.xk_out
xk_out[4] << tailBitsGenerator_parallel:mytail.xk_out
xk_out[5] << tailBitsGenerator_parallel:mytail.xk_out
xk_out[6] << tailBitsGenerator_parallel:mytail.xk_out
xk_out[7] << tailBitsGenerator_parallel:mytail.xk_out
zk_out[0] << tailBitsGenerator_parallel:mytail.zk_out
zk_out[1] << tailBitsGenerator_parallel:mytail.zk_out
zk_out[2] << tailBitsGenerator_parallel:mytail.zk_out
zk_out[3] << tailBitsGenerator_parallel:mytail.zk_out
zk_out[4] << tailBitsGenerator_parallel:mytail.zk_out
zk_out[5] << tailBitsGenerator_parallel:mytail.zk_out
zk_out[6] << tailBitsGenerator_parallel:mytail.zk_out
zk_out[7] << tailBitsGenerator_parallel:mytail.zk_out
zk_prime_out[0] << tailBitsGenerator_parallel:mytail.zk_prime_out
zk_prime_out[1] << tailBitsGenerator_parallel:mytail.zk_prime_out
zk_prime_out[2] << tailBitsGenerator_parallel:mytail.zk_prime_out
zk_prime_out[3] << tailBitsGenerator_parallel:mytail.zk_prime_out
zk_prime_out[4] << tailBitsGenerator_parallel:mytail.zk_prime_out
zk_prime_out[5] << tailBitsGenerator_parallel:mytail.zk_prime_out
zk_prime_out[6] << tailBitsGenerator_parallel:mytail.zk_prime_out
zk_prime_out[7] << tailBitsGenerator_parallel:mytail.zk_prime_out
cbs_fifo_rreq << cbs_fifo_empty.DB_MAX_OUTPUT_PORT_TYPE
out_valid << fsm:my_fsm.out_valid
d_state[0] << fsm:my_fsm.state
d_state[1] << fsm:my_fsm.state
d_state[2] << fsm:my_fsm.state


|encoder_top_parallel|my_counter:counter
clk => clk.IN1
en => en.IN1
mode => switch.IN1
mode => switch.IN1
clr => clr.IN1
switch <= switch.DB_MAX_OUTPUT_PORT_TYPE
count_valid <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|encoder_top_parallel|my_counter:counter|counter_enc:count
aclr => aclr.IN1
clock => clock.IN1
cnt_en => cnt_en.IN1
q[0] <= lpm_counter:LPM_COUNTER_component.q
q[1] <= lpm_counter:LPM_COUNTER_component.q
q[2] <= lpm_counter:LPM_COUNTER_component.q
q[3] <= lpm_counter:LPM_COUNTER_component.q
q[4] <= lpm_counter:LPM_COUNTER_component.q
q[5] <= lpm_counter:LPM_COUNTER_component.q
q[6] <= lpm_counter:LPM_COUNTER_component.q
q[7] <= lpm_counter:LPM_COUNTER_component.q
q[8] <= lpm_counter:LPM_COUNTER_component.q
q[9] <= lpm_counter:LPM_COUNTER_component.q
q[10] <= lpm_counter:LPM_COUNTER_component.q
q[11] <= lpm_counter:LPM_COUNTER_component.q
q[12] <= lpm_counter:LPM_COUNTER_component.q


|encoder_top_parallel|my_counter:counter|counter_enc:count|lpm_counter:LPM_COUNTER_component
clock => cntr_5mi:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_5mi:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => cntr_5mi:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
data[12] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_5mi:auto_generated.q[0]
q[1] <= cntr_5mi:auto_generated.q[1]
q[2] <= cntr_5mi:auto_generated.q[2]
q[3] <= cntr_5mi:auto_generated.q[3]
q[4] <= cntr_5mi:auto_generated.q[4]
q[5] <= cntr_5mi:auto_generated.q[5]
q[6] <= cntr_5mi:auto_generated.q[6]
q[7] <= cntr_5mi:auto_generated.q[7]
q[8] <= cntr_5mi:auto_generated.q[8]
q[9] <= cntr_5mi:auto_generated.q[9]
q[10] <= cntr_5mi:auto_generated.q[10]
q[11] <= cntr_5mi:auto_generated.q[11]
q[12] <= cntr_5mi:auto_generated.q[12]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|encoder_top_parallel|my_counter:counter|counter_enc:count|lpm_counter:LPM_COUNTER_component|cntr_5mi:auto_generated
aclr => counter_reg_bit[12].IN0
clock => counter_reg_bit[12].CLK
clock => counter_reg_bit[11].CLK
clock => counter_reg_bit[10].CLK
clock => counter_reg_bit[9].CLK
clock => counter_reg_bit[8].CLK
clock => counter_reg_bit[7].CLK
clock => counter_reg_bit[6].CLK
clock => counter_reg_bit[5].CLK
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN0
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter_reg_bit[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= counter_reg_bit[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= counter_reg_bit[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= counter_reg_bit[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= counter_reg_bit[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= counter_reg_bit[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= counter_reg_bit[11].DB_MAX_OUTPUT_PORT_TYPE
q[12] <= counter_reg_bit[12].DB_MAX_OUTPUT_PORT_TYPE


|encoder_top_parallel|encoder_parallel:en1
b[0] => zk.IN1
b[0] => zk.IN1
b[0] => zk.IN1
b[1] => c.IN0
b[1] => f.IN1
b[1] => zk.IN1
b[1] => zk.IN1
b[2] => c.IN1
b[2] => d.IN0
b[2] => zk.IN1
b[2] => q_out.IN1
b[3] => c.IN1
b[3] => d.IN1
b[3] => zk.IN1
b[4] => d.IN1
b[4] => e.IN0
b[4] => q_out[2].IN1
b[5] => e.IN1
b[5] => zk.IN1
b[5] => q_out[1].IN1
b[6] => e.IN1
b[6] => q_out[0].IN1
b[7] => zk.IN1
clock => dffs[0].CLK
clock => dffs[1].CLK
clock => dffs[2].CLK
reset => dffs[0].ACLR
reset => dffs[1].ACLR
reset => dffs[2].ACLR
en => dffs[2].ENA
en => dffs[1].ENA
en => dffs[0].ENA
zk[0] <= zk.DB_MAX_OUTPUT_PORT_TYPE
zk[1] <= zk.DB_MAX_OUTPUT_PORT_TYPE
zk[2] <= zk.DB_MAX_OUTPUT_PORT_TYPE
zk[3] <= zk.DB_MAX_OUTPUT_PORT_TYPE
zk[4] <= zk.DB_MAX_OUTPUT_PORT_TYPE
zk[5] <= zk.DB_MAX_OUTPUT_PORT_TYPE
zk[6] <= zk.DB_MAX_OUTPUT_PORT_TYPE
zk[7] <= zk.DB_MAX_OUTPUT_PORT_TYPE
xk[0] <= <GND>
xk[1] <= <GND>
xk[2] <= <GND>
xk[3] <= <GND>
xk[4] <= <GND>
xk[5] <= <GND>
xk[6] <= <GND>
xk[7] <= <GND>
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE


|encoder_top_parallel|encoder_parallel:en2
b[0] => zk.IN1
b[0] => zk.IN1
b[0] => zk.IN1
b[1] => c.IN0
b[1] => f.IN1
b[1] => zk.IN1
b[1] => zk.IN1
b[2] => c.IN1
b[2] => d.IN0
b[2] => zk.IN1
b[2] => q_out.IN1
b[3] => c.IN1
b[3] => d.IN1
b[3] => zk.IN1
b[4] => d.IN1
b[4] => e.IN0
b[4] => q_out[2].IN1
b[5] => e.IN1
b[5] => zk.IN1
b[5] => q_out[1].IN1
b[6] => e.IN1
b[6] => q_out[0].IN1
b[7] => zk.IN1
clock => dffs[0].CLK
clock => dffs[1].CLK
clock => dffs[2].CLK
reset => dffs[0].ACLR
reset => dffs[1].ACLR
reset => dffs[2].ACLR
en => dffs[2].ENA
en => dffs[1].ENA
en => dffs[0].ENA
zk[0] <= zk.DB_MAX_OUTPUT_PORT_TYPE
zk[1] <= zk.DB_MAX_OUTPUT_PORT_TYPE
zk[2] <= zk.DB_MAX_OUTPUT_PORT_TYPE
zk[3] <= zk.DB_MAX_OUTPUT_PORT_TYPE
zk[4] <= zk.DB_MAX_OUTPUT_PORT_TYPE
zk[5] <= zk.DB_MAX_OUTPUT_PORT_TYPE
zk[6] <= zk.DB_MAX_OUTPUT_PORT_TYPE
zk[7] <= zk.DB_MAX_OUTPUT_PORT_TYPE
xk[0] <= <GND>
xk[1] <= <GND>
xk[2] <= <GND>
xk[3] <= <GND>
xk[4] <= <GND>
xk[5] <= <GND>
xk[6] <= <GND>
xk[7] <= <GND>
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE


|encoder_top_parallel|delay:del
clock => clock.IN2
aclr => aclr.IN3
data_write => data_write.IN1
data_read => data_read.IN1
counter_mode => counter_mode.IN1
data_in[0] => data_in[0].IN1
data_in[1] => data_in[1].IN1
data_in[2] => data_in[2].IN1
data_in[3] => data_in[3].IN1
data_in[4] => data_in[4].IN1
data_in[5] => data_in[5].IN1
data_in[6] => data_in[6].IN1
data_in[7] => data_in[7].IN1
full_6144 <= byte_fifo:delay_fifo.port5
usedw <= <GND>
data_out[0] <= byte_fifo:delay_fifo.port8
data_out[1] <= byte_fifo:delay_fifo.port8
data_out[2] <= byte_fifo:delay_fifo.port8
data_out[3] <= byte_fifo:delay_fifo.port8
data_out[4] <= byte_fifo:delay_fifo.port8
data_out[5] <= byte_fifo:delay_fifo.port8
data_out[6] <= byte_fifo:delay_fifo.port8
data_out[7] <= byte_fifo:delay_fifo.port8


|encoder_top_parallel|delay:del|byte_fifo:delay_fifo
aclr => aclr.IN1
clock => clock.IN1
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
rdreq => rdreq.IN1
wrreq => wrreq.IN1
almost_full <= scfifo:scfifo_component.almost_full
empty <= scfifo:scfifo_component.empty
full <= scfifo:scfifo_component.full
q[0] <= scfifo:scfifo_component.q
q[1] <= scfifo:scfifo_component.q
q[2] <= scfifo:scfifo_component.q
q[3] <= scfifo:scfifo_component.q
q[4] <= scfifo:scfifo_component.q
q[5] <= scfifo:scfifo_component.q
q[6] <= scfifo:scfifo_component.q
q[7] <= scfifo:scfifo_component.q


|encoder_top_parallel|delay:del|byte_fifo:delay_fifo|scfifo:scfifo_component
data[0] => scfifo_uqc1:auto_generated.data[0]
data[1] => scfifo_uqc1:auto_generated.data[1]
data[2] => scfifo_uqc1:auto_generated.data[2]
data[3] => scfifo_uqc1:auto_generated.data[3]
data[4] => scfifo_uqc1:auto_generated.data[4]
data[5] => scfifo_uqc1:auto_generated.data[5]
data[6] => scfifo_uqc1:auto_generated.data[6]
data[7] => scfifo_uqc1:auto_generated.data[7]
q[0] <= scfifo_uqc1:auto_generated.q[0]
q[1] <= scfifo_uqc1:auto_generated.q[1]
q[2] <= scfifo_uqc1:auto_generated.q[2]
q[3] <= scfifo_uqc1:auto_generated.q[3]
q[4] <= scfifo_uqc1:auto_generated.q[4]
q[5] <= scfifo_uqc1:auto_generated.q[5]
q[6] <= scfifo_uqc1:auto_generated.q[6]
q[7] <= scfifo_uqc1:auto_generated.q[7]
wrreq => scfifo_uqc1:auto_generated.wrreq
rdreq => scfifo_uqc1:auto_generated.rdreq
clock => scfifo_uqc1:auto_generated.clock
aclr => scfifo_uqc1:auto_generated.aclr
sclr => ~NO_FANOUT~
eccstatus[0] <= <UNC>
eccstatus[1] <= <UNC>
empty <= scfifo_uqc1:auto_generated.empty
full <= scfifo_uqc1:auto_generated.full
almost_full <= scfifo_uqc1:auto_generated.almost_full
almost_empty <= <GND>
usedw[0] <= <GND>
usedw[1] <= <GND>
usedw[2] <= <GND>
usedw[3] <= <GND>
usedw[4] <= <GND>
usedw[5] <= <GND>
usedw[6] <= <GND>
usedw[7] <= <GND>
usedw[8] <= <GND>
usedw[9] <= <GND>


|encoder_top_parallel|delay:del|byte_fifo:delay_fifo|scfifo:scfifo_component|scfifo_uqc1:auto_generated
aclr => a_dpfifo_bca1:dpfifo.aclr
aclr => dffe_af.IN0
almost_full <= dffe_af.DB_MAX_OUTPUT_PORT_TYPE
clock => a_dpfifo_bca1:dpfifo.clock
clock => dffe_af.CLK
data[0] => a_dpfifo_bca1:dpfifo.data[0]
data[1] => a_dpfifo_bca1:dpfifo.data[1]
data[2] => a_dpfifo_bca1:dpfifo.data[2]
data[3] => a_dpfifo_bca1:dpfifo.data[3]
data[4] => a_dpfifo_bca1:dpfifo.data[4]
data[5] => a_dpfifo_bca1:dpfifo.data[5]
data[6] => a_dpfifo_bca1:dpfifo.data[6]
data[7] => a_dpfifo_bca1:dpfifo.data[7]
empty <= a_dpfifo_bca1:dpfifo.empty
full <= a_dpfifo_bca1:dpfifo.full
q[0] <= a_dpfifo_bca1:dpfifo.q[0]
q[1] <= a_dpfifo_bca1:dpfifo.q[1]
q[2] <= a_dpfifo_bca1:dpfifo.q[2]
q[3] <= a_dpfifo_bca1:dpfifo.q[3]
q[4] <= a_dpfifo_bca1:dpfifo.q[4]
q[5] <= a_dpfifo_bca1:dpfifo.q[5]
q[6] <= a_dpfifo_bca1:dpfifo.q[6]
q[7] <= a_dpfifo_bca1:dpfifo.q[7]
rdreq => a_dpfifo_bca1:dpfifo.rreq
rdreq => _.IN1
rdreq => _.IN0
wrreq => a_dpfifo_bca1:dpfifo.wreq
wrreq => _.IN0
wrreq => _.IN1


|encoder_top_parallel|delay:del|byte_fifo:delay_fifo|scfifo:scfifo_component|scfifo_uqc1:auto_generated|a_dpfifo_bca1:dpfifo
aclr => a_fefifo_jaf:fifo_state.aclr
aclr => cntr_uhb:rd_ptr_count.aclr
aclr => cntr_uhb:wr_ptr.aclr
clock => a_fefifo_jaf:fifo_state.clock
clock => altsyncram_i0t1:FIFOram.clock0
clock => altsyncram_i0t1:FIFOram.clock1
clock => cntr_uhb:rd_ptr_count.clock
clock => cntr_uhb:wr_ptr.clock
data[0] => altsyncram_i0t1:FIFOram.data_a[0]
data[1] => altsyncram_i0t1:FIFOram.data_a[1]
data[2] => altsyncram_i0t1:FIFOram.data_a[2]
data[3] => altsyncram_i0t1:FIFOram.data_a[3]
data[4] => altsyncram_i0t1:FIFOram.data_a[4]
data[5] => altsyncram_i0t1:FIFOram.data_a[5]
data[6] => altsyncram_i0t1:FIFOram.data_a[6]
data[7] => altsyncram_i0t1:FIFOram.data_a[7]
empty <= a_fefifo_jaf:fifo_state.empty
full <= a_fefifo_jaf:fifo_state.full
q[0] <= altsyncram_i0t1:FIFOram.q_b[0]
q[1] <= altsyncram_i0t1:FIFOram.q_b[1]
q[2] <= altsyncram_i0t1:FIFOram.q_b[2]
q[3] <= altsyncram_i0t1:FIFOram.q_b[3]
q[4] <= altsyncram_i0t1:FIFOram.q_b[4]
q[5] <= altsyncram_i0t1:FIFOram.q_b[5]
q[6] <= altsyncram_i0t1:FIFOram.q_b[6]
q[7] <= altsyncram_i0t1:FIFOram.q_b[7]
rreq => a_fefifo_jaf:fifo_state.rreq
rreq => valid_rreq.IN0
sclr => a_fefifo_jaf:fifo_state.sclr
sclr => _.IN0
sclr => _.IN1
sclr => cntr_uhb:rd_ptr_count.sclr
sclr => cntr_uhb:wr_ptr.sclr
usedw[0] <= a_fefifo_jaf:fifo_state.usedw_out[0]
usedw[1] <= a_fefifo_jaf:fifo_state.usedw_out[1]
usedw[2] <= a_fefifo_jaf:fifo_state.usedw_out[2]
usedw[3] <= a_fefifo_jaf:fifo_state.usedw_out[3]
usedw[4] <= a_fefifo_jaf:fifo_state.usedw_out[4]
usedw[5] <= a_fefifo_jaf:fifo_state.usedw_out[5]
usedw[6] <= a_fefifo_jaf:fifo_state.usedw_out[6]
usedw[7] <= a_fefifo_jaf:fifo_state.usedw_out[7]
usedw[8] <= a_fefifo_jaf:fifo_state.usedw_out[8]
usedw[9] <= a_fefifo_jaf:fifo_state.usedw_out[9]
wreq => a_fefifo_jaf:fifo_state.wreq
wreq => valid_wreq.IN0


|encoder_top_parallel|delay:del|byte_fifo:delay_fifo|scfifo:scfifo_component|scfifo_uqc1:auto_generated|a_dpfifo_bca1:dpfifo|a_fefifo_jaf:fifo_state
aclr => b_full.IN0
aclr => b_non_empty.IN0
aclr => cntr_ai7:count_usedw.aclr
clock => cntr_ai7:count_usedw.clock
clock => b_full.CLK
clock => b_non_empty.CLK
empty <= empty.DB_MAX_OUTPUT_PORT_TYPE
full <= b_full.DB_MAX_OUTPUT_PORT_TYPE
rreq => _.IN1
rreq => _.IN0
rreq => _.IN1
rreq => valid_rreq.IN0
sclr => _.IN0
sclr => _.IN0
sclr => _.IN1
sclr => _.IN0
sclr => _.IN0
sclr => cntr_ai7:count_usedw.sclr
usedw_out[0] <= usedw[0].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[1] <= usedw[1].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[2] <= usedw[2].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[3] <= usedw[3].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[4] <= usedw[4].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[5] <= usedw[5].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[6] <= usedw[6].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[7] <= usedw[7].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[8] <= usedw[8].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[9] <= usedw[9].DB_MAX_OUTPUT_PORT_TYPE
wreq => _.IN1
wreq => _.IN1
wreq => _.IN0
wreq => valid_wreq.IN0


|encoder_top_parallel|delay:del|byte_fifo:delay_fifo|scfifo:scfifo_component|scfifo_uqc1:auto_generated|a_dpfifo_bca1:dpfifo|a_fefifo_jaf:fifo_state|cntr_ai7:count_usedw
aclr => counter_reg_bit[9].IN0
clock => counter_reg_bit[9].CLK
clock => counter_reg_bit[8].CLK
clock => counter_reg_bit[7].CLK
clock => counter_reg_bit[6].CLK
clock => counter_reg_bit[5].CLK
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN0
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter_reg_bit[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= counter_reg_bit[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= counter_reg_bit[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= counter_reg_bit[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= counter_reg_bit[9].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN1
sclr => counter_reg_bit[9].SCLR
sclr => counter_reg_bit[8].SCLR
sclr => counter_reg_bit[7].SCLR
sclr => counter_reg_bit[6].SCLR
sclr => counter_reg_bit[5].SCLR
sclr => counter_reg_bit[4].SCLR
sclr => counter_reg_bit[3].SCLR
sclr => counter_reg_bit[2].SCLR
sclr => counter_reg_bit[1].SCLR
sclr => counter_reg_bit[0].SCLR
updown => updown_other_bits.IN1
updown => counter_comb_bita0.DATAF


|encoder_top_parallel|delay:del|byte_fifo:delay_fifo|scfifo:scfifo_component|scfifo_uqc1:auto_generated|a_dpfifo_bca1:dpfifo|altsyncram_i0t1:FIFOram
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[0] => ram_block1a4.PORTBADDR
address_b[0] => ram_block1a5.PORTBADDR
address_b[0] => ram_block1a6.PORTBADDR
address_b[0] => ram_block1a7.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[1] => ram_block1a4.PORTBADDR1
address_b[1] => ram_block1a5.PORTBADDR1
address_b[1] => ram_block1a6.PORTBADDR1
address_b[1] => ram_block1a7.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[2] => ram_block1a4.PORTBADDR2
address_b[2] => ram_block1a5.PORTBADDR2
address_b[2] => ram_block1a6.PORTBADDR2
address_b[2] => ram_block1a7.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[3] => ram_block1a4.PORTBADDR3
address_b[3] => ram_block1a5.PORTBADDR3
address_b[3] => ram_block1a6.PORTBADDR3
address_b[3] => ram_block1a7.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
address_b[4] => ram_block1a4.PORTBADDR4
address_b[4] => ram_block1a5.PORTBADDR4
address_b[4] => ram_block1a6.PORTBADDR4
address_b[4] => ram_block1a7.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[5] => ram_block1a1.PORTBADDR5
address_b[5] => ram_block1a2.PORTBADDR5
address_b[5] => ram_block1a3.PORTBADDR5
address_b[5] => ram_block1a4.PORTBADDR5
address_b[5] => ram_block1a5.PORTBADDR5
address_b[5] => ram_block1a6.PORTBADDR5
address_b[5] => ram_block1a7.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[6] => ram_block1a1.PORTBADDR6
address_b[6] => ram_block1a2.PORTBADDR6
address_b[6] => ram_block1a3.PORTBADDR6
address_b[6] => ram_block1a4.PORTBADDR6
address_b[6] => ram_block1a5.PORTBADDR6
address_b[6] => ram_block1a6.PORTBADDR6
address_b[6] => ram_block1a7.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
address_b[7] => ram_block1a1.PORTBADDR7
address_b[7] => ram_block1a2.PORTBADDR7
address_b[7] => ram_block1a3.PORTBADDR7
address_b[7] => ram_block1a4.PORTBADDR7
address_b[7] => ram_block1a5.PORTBADDR7
address_b[7] => ram_block1a6.PORTBADDR7
address_b[7] => ram_block1a7.PORTBADDR7
address_b[8] => ram_block1a0.PORTBADDR8
address_b[8] => ram_block1a1.PORTBADDR8
address_b[8] => ram_block1a2.PORTBADDR8
address_b[8] => ram_block1a3.PORTBADDR8
address_b[8] => ram_block1a4.PORTBADDR8
address_b[8] => ram_block1a5.PORTBADDR8
address_b[8] => ram_block1a6.PORTBADDR8
address_b[8] => ram_block1a7.PORTBADDR8
address_b[9] => ram_block1a0.PORTBADDR9
address_b[9] => ram_block1a1.PORTBADDR9
address_b[9] => ram_block1a2.PORTBADDR9
address_b[9] => ram_block1a3.PORTBADDR9
address_b[9] => ram_block1a4.PORTBADDR9
address_b[9] => ram_block1a5.PORTBADDR9
address_b[9] => ram_block1a6.PORTBADDR9
address_b[9] => ram_block1a7.PORTBADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
clock1 => ram_block1a5.CLK1
clock1 => ram_block1a6.CLK1
clock1 => ram_block1a7.CLK1
clocken1 => ram_block1a0.ENA1
clocken1 => ram_block1a1.ENA1
clocken1 => ram_block1a2.ENA1
clocken1 => ram_block1a3.ENA1
clocken1 => ram_block1a4.ENA1
clocken1 => ram_block1a5.ENA1
clocken1 => ram_block1a6.ENA1
clocken1 => ram_block1a7.ENA1
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
data_a[6] => ram_block1a6.PORTADATAIN
data_a[7] => ram_block1a7.PORTADATAIN
q_b[0] <= ram_block1a0.PORTBDATAOUT
q_b[1] <= ram_block1a1.PORTBDATAOUT
q_b[2] <= ram_block1a2.PORTBDATAOUT
q_b[3] <= ram_block1a3.PORTBDATAOUT
q_b[4] <= ram_block1a4.PORTBDATAOUT
q_b[5] <= ram_block1a5.PORTBDATAOUT
q_b[6] <= ram_block1a6.PORTBDATAOUT
q_b[7] <= ram_block1a7.PORTBDATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a0.ENA0
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a1.ENA0
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a2.ENA0
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a3.ENA0
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a4.ENA0
wren_a => ram_block1a5.PORTAWE
wren_a => ram_block1a5.ENA0
wren_a => ram_block1a6.PORTAWE
wren_a => ram_block1a6.ENA0
wren_a => ram_block1a7.PORTAWE
wren_a => ram_block1a7.ENA0


|encoder_top_parallel|delay:del|byte_fifo:delay_fifo|scfifo:scfifo_component|scfifo_uqc1:auto_generated|a_dpfifo_bca1:dpfifo|cntr_uhb:rd_ptr_count
aclr => counter_reg_bit[9].IN0
clock => counter_reg_bit[9].CLK
clock => counter_reg_bit[8].CLK
clock => counter_reg_bit[7].CLK
clock => counter_reg_bit[6].CLK
clock => counter_reg_bit[5].CLK
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN0
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter_reg_bit[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= counter_reg_bit[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= counter_reg_bit[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= counter_reg_bit[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= counter_reg_bit[9].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN1
sclr => counter_reg_bit[9].SCLR
sclr => counter_reg_bit[8].SCLR
sclr => counter_reg_bit[7].SCLR
sclr => counter_reg_bit[6].SCLR
sclr => counter_reg_bit[5].SCLR
sclr => counter_reg_bit[4].SCLR
sclr => counter_reg_bit[3].SCLR
sclr => counter_reg_bit[2].SCLR
sclr => counter_reg_bit[1].SCLR
sclr => counter_reg_bit[0].SCLR


|encoder_top_parallel|delay:del|byte_fifo:delay_fifo|scfifo:scfifo_component|scfifo_uqc1:auto_generated|a_dpfifo_bca1:dpfifo|cntr_uhb:wr_ptr
aclr => counter_reg_bit[9].IN0
clock => counter_reg_bit[9].CLK
clock => counter_reg_bit[8].CLK
clock => counter_reg_bit[7].CLK
clock => counter_reg_bit[6].CLK
clock => counter_reg_bit[5].CLK
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN0
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter_reg_bit[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= counter_reg_bit[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= counter_reg_bit[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= counter_reg_bit[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= counter_reg_bit[9].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN1
sclr => counter_reg_bit[9].SCLR
sclr => counter_reg_bit[8].SCLR
sclr => counter_reg_bit[7].SCLR
sclr => counter_reg_bit[6].SCLR
sclr => counter_reg_bit[5].SCLR
sclr => counter_reg_bit[4].SCLR
sclr => counter_reg_bit[3].SCLR
sclr => counter_reg_bit[2].SCLR
sclr => counter_reg_bit[1].SCLR
sclr => counter_reg_bit[0].SCLR


|encoder_top_parallel|delay:del|fifoFSM:my_fifo_fsm
init_we => state_next.DATAA
count_complete => state_next.DATAB
clock => state_curr.CLK
reset => state_curr.ACLR
we <= state_curr.DB_MAX_OUTPUT_PORT_TYPE


|encoder_top_parallel|delay:del|my_counter:we_counter
clk => clk.IN1
en => en.IN1
mode => switch.IN1
mode => switch.IN1
clr => clr.IN1
switch <= switch.DB_MAX_OUTPUT_PORT_TYPE
count_valid <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|encoder_top_parallel|delay:del|my_counter:we_counter|counter_enc:count
aclr => aclr.IN1
clock => clock.IN1
cnt_en => cnt_en.IN1
q[0] <= lpm_counter:LPM_COUNTER_component.q
q[1] <= lpm_counter:LPM_COUNTER_component.q
q[2] <= lpm_counter:LPM_COUNTER_component.q
q[3] <= lpm_counter:LPM_COUNTER_component.q
q[4] <= lpm_counter:LPM_COUNTER_component.q
q[5] <= lpm_counter:LPM_COUNTER_component.q
q[6] <= lpm_counter:LPM_COUNTER_component.q
q[7] <= lpm_counter:LPM_COUNTER_component.q
q[8] <= lpm_counter:LPM_COUNTER_component.q
q[9] <= lpm_counter:LPM_COUNTER_component.q
q[10] <= lpm_counter:LPM_COUNTER_component.q
q[11] <= lpm_counter:LPM_COUNTER_component.q
q[12] <= lpm_counter:LPM_COUNTER_component.q


|encoder_top_parallel|delay:del|my_counter:we_counter|counter_enc:count|lpm_counter:LPM_COUNTER_component
clock => cntr_5mi:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_5mi:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => cntr_5mi:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
data[12] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_5mi:auto_generated.q[0]
q[1] <= cntr_5mi:auto_generated.q[1]
q[2] <= cntr_5mi:auto_generated.q[2]
q[3] <= cntr_5mi:auto_generated.q[3]
q[4] <= cntr_5mi:auto_generated.q[4]
q[5] <= cntr_5mi:auto_generated.q[5]
q[6] <= cntr_5mi:auto_generated.q[6]
q[7] <= cntr_5mi:auto_generated.q[7]
q[8] <= cntr_5mi:auto_generated.q[8]
q[9] <= cntr_5mi:auto_generated.q[9]
q[10] <= cntr_5mi:auto_generated.q[10]
q[11] <= cntr_5mi:auto_generated.q[11]
q[12] <= cntr_5mi:auto_generated.q[12]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|encoder_top_parallel|delay:del|my_counter:we_counter|counter_enc:count|lpm_counter:LPM_COUNTER_component|cntr_5mi:auto_generated
aclr => counter_reg_bit[12].IN0
clock => counter_reg_bit[12].CLK
clock => counter_reg_bit[11].CLK
clock => counter_reg_bit[10].CLK
clock => counter_reg_bit[9].CLK
clock => counter_reg_bit[8].CLK
clock => counter_reg_bit[7].CLK
clock => counter_reg_bit[6].CLK
clock => counter_reg_bit[5].CLK
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN0
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter_reg_bit[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= counter_reg_bit[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= counter_reg_bit[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= counter_reg_bit[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= counter_reg_bit[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= counter_reg_bit[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= counter_reg_bit[11].DB_MAX_OUTPUT_PORT_TYPE
q[12] <= counter_reg_bit[12].DB_MAX_OUTPUT_PORT_TYPE


|encoder_top_parallel|fsm:my_fsm
aclr => count.OUTPUTSELECT
aclr => count.OUTPUTSELECT
aclr => count.OUTPUTSELECT
aclr => state_curr~3.DATAIN
clock => count[0].CLK
clock => count[1].CLK
clock => count[2].CLK
clock => state_curr~1.DATAIN
cbs_ready => state_next.RECORD.DATAB
cbs_ready => Selector0.IN2
int_ready => Selector2.IN3
int_ready => Selector1.IN2
counter => state_next.LAST_OPERATE.DATAB
counter => Selector2.IN1
record_en <= record_en.DB_MAX_OUTPUT_PORT_TYPE
delay_ren <= delay_ren.DB_MAX_OUTPUT_PORT_TYPE
delay_wen <= delay_wen.DB_MAX_OUTPUT_PORT_TYPE
counter_en <= counter_en.DB_MAX_OUTPUT_PORT_TYPE
tail_en <= tail_en.DB_MAX_OUTPUT_PORT_TYPE
tail_mode <= tail_mode.DB_MAX_OUTPUT_PORT_TYPE
enc_en <= enc_en.DB_MAX_OUTPUT_PORT_TYPE
ready <= ready.DB_MAX_OUTPUT_PORT_TYPE
out_valid <= out_valid.DB_MAX_OUTPUT_PORT_TYPE
state[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
state[1] <= state.DB_MAX_OUTPUT_PORT_TYPE
state[2] <= state.DB_MAX_OUTPUT_PORT_TYPE


|encoder_top_parallel|tailBitsGenerator_parallel:mytail
xk_in[0] => xk_out.DATAA
xk_in[1] => xk_out.DATAA
xk_in[2] => xk_out.DATAA
xk_in[3] => xk_out.DATAA
xk_in[4] => xk_out.DATAA
xk_in[5] => xk_out.DATAA
xk_in[6] => xk_out.DATAA
xk_in[7] => xk_out.DATAA
zk_in[0] => zk_out.DATAA
zk_in[1] => zk_out.DATAA
zk_in[2] => zk_out.DATAA
zk_in[3] => zk_out.DATAA
zk_in[4] => zk_out.DATAA
zk_in[5] => zk_out.DATAA
zk_in[6] => zk_out.DATAA
zk_in[7] => zk_out.DATAA
zk_prime_in[0] => zk_prime_out.DATAA
zk_prime_in[1] => zk_prime_out.DATAA
zk_prime_in[2] => zk_prime_out.DATAA
zk_prime_in[3] => zk_prime_out.DATAA
zk_prime_in[4] => zk_prime_out.DATAA
zk_prime_in[5] => zk_prime_out.DATAA
zk_prime_in[6] => zk_prime_out.DATAA
zk_prime_in[7] => zk_prime_out.DATAA
q0 => tail_bit_regs.IN0
q0 => tail_bit_regs.IN0
q0 => tail_bit_regs[9].DATAIN
q0 => tail_bit_regs[8].DATAIN
q1 => tail_bit_regs.IN0
q1 => tail_bit_regs.IN1
q1 => tail_bit_regs[5].DATAIN
q2 => tail_bit_regs.IN1
q2 => tail_bit_regs.IN1
q0_prime => tail_bit_regs.IN0
q0_prime => tail_bit_regs.IN0
q0_prime => tail_bit_regs[11].DATAIN
q0_prime => tail_bit_regs[10].DATAIN
q1_prime => tail_bit_regs.IN0
q1_prime => tail_bit_regs.IN1
q1_prime => tail_bit_regs[7].DATAIN
q2_prime => tail_bit_regs.IN1
q2_prime => tail_bit_regs.IN1
tail_bit_regs_enable => tail_bit_regs[11].ENA
tail_bit_regs_enable => tail_bit_regs[10].ENA
tail_bit_regs_enable => tail_bit_regs[9].ENA
tail_bit_regs_enable => tail_bit_regs[8].ENA
tail_bit_regs_enable => tail_bit_regs[7].ENA
tail_bit_regs_enable => tail_bit_regs[6].ENA
tail_bit_regs_enable => tail_bit_regs[5].ENA
tail_bit_regs_enable => tail_bit_regs[4].ENA
tail_bit_regs_enable => tail_bit_regs[3].ENA
tail_bit_regs_enable => tail_bit_regs[2].ENA
tail_bit_regs_enable => tail_bit_regs[1].ENA
tail_bit_regs_enable => tail_bit_regs[0].ENA
tail_bit_mode => xk_out.OUTPUTSELECT
tail_bit_mode => xk_out.OUTPUTSELECT
tail_bit_mode => xk_out.OUTPUTSELECT
tail_bit_mode => xk_out.OUTPUTSELECT
tail_bit_mode => xk_out.OUTPUTSELECT
tail_bit_mode => xk_out.OUTPUTSELECT
tail_bit_mode => xk_out.OUTPUTSELECT
tail_bit_mode => xk_out.OUTPUTSELECT
tail_bit_mode => zk_out.OUTPUTSELECT
tail_bit_mode => zk_out.OUTPUTSELECT
tail_bit_mode => zk_out.OUTPUTSELECT
tail_bit_mode => zk_out.OUTPUTSELECT
tail_bit_mode => zk_out.OUTPUTSELECT
tail_bit_mode => zk_out.OUTPUTSELECT
tail_bit_mode => zk_out.OUTPUTSELECT
tail_bit_mode => zk_out.OUTPUTSELECT
tail_bit_mode => zk_prime_out.OUTPUTSELECT
tail_bit_mode => zk_prime_out.OUTPUTSELECT
tail_bit_mode => zk_prime_out.OUTPUTSELECT
tail_bit_mode => zk_prime_out.OUTPUTSELECT
tail_bit_mode => zk_prime_out.OUTPUTSELECT
tail_bit_mode => zk_prime_out.OUTPUTSELECT
tail_bit_mode => zk_prime_out.OUTPUTSELECT
tail_bit_mode => zk_prime_out.OUTPUTSELECT
clock => tail_bit_regs[0].CLK
clock => tail_bit_regs[1].CLK
clock => tail_bit_regs[2].CLK
clock => tail_bit_regs[3].CLK
clock => tail_bit_regs[4].CLK
clock => tail_bit_regs[5].CLK
clock => tail_bit_regs[6].CLK
clock => tail_bit_regs[7].CLK
clock => tail_bit_regs[8].CLK
clock => tail_bit_regs[9].CLK
clock => tail_bit_regs[10].CLK
clock => tail_bit_regs[11].CLK
reset => tail_bit_regs[0].ACLR
reset => tail_bit_regs[1].ACLR
reset => tail_bit_regs[2].ACLR
reset => tail_bit_regs[3].ACLR
reset => tail_bit_regs[4].ACLR
reset => tail_bit_regs[5].ACLR
reset => tail_bit_regs[6].ACLR
reset => tail_bit_regs[7].ACLR
reset => tail_bit_regs[8].ACLR
reset => tail_bit_regs[9].ACLR
reset => tail_bit_regs[10].ACLR
reset => tail_bit_regs[11].ACLR
xk_out[0] <= xk_out.DB_MAX_OUTPUT_PORT_TYPE
xk_out[1] <= xk_out.DB_MAX_OUTPUT_PORT_TYPE
xk_out[2] <= xk_out.DB_MAX_OUTPUT_PORT_TYPE
xk_out[3] <= xk_out.DB_MAX_OUTPUT_PORT_TYPE
xk_out[4] <= xk_out.DB_MAX_OUTPUT_PORT_TYPE
xk_out[5] <= xk_out.DB_MAX_OUTPUT_PORT_TYPE
xk_out[6] <= xk_out.DB_MAX_OUTPUT_PORT_TYPE
xk_out[7] <= xk_out.DB_MAX_OUTPUT_PORT_TYPE
zk_out[0] <= zk_out.DB_MAX_OUTPUT_PORT_TYPE
zk_out[1] <= zk_out.DB_MAX_OUTPUT_PORT_TYPE
zk_out[2] <= zk_out.DB_MAX_OUTPUT_PORT_TYPE
zk_out[3] <= zk_out.DB_MAX_OUTPUT_PORT_TYPE
zk_out[4] <= zk_out.DB_MAX_OUTPUT_PORT_TYPE
zk_out[5] <= zk_out.DB_MAX_OUTPUT_PORT_TYPE
zk_out[6] <= zk_out.DB_MAX_OUTPUT_PORT_TYPE
zk_out[7] <= zk_out.DB_MAX_OUTPUT_PORT_TYPE
zk_prime_out[0] <= zk_prime_out.DB_MAX_OUTPUT_PORT_TYPE
zk_prime_out[1] <= zk_prime_out.DB_MAX_OUTPUT_PORT_TYPE
zk_prime_out[2] <= zk_prime_out.DB_MAX_OUTPUT_PORT_TYPE
zk_prime_out[3] <= zk_prime_out.DB_MAX_OUTPUT_PORT_TYPE
zk_prime_out[4] <= zk_prime_out.DB_MAX_OUTPUT_PORT_TYPE
zk_prime_out[5] <= zk_prime_out.DB_MAX_OUTPUT_PORT_TYPE
zk_prime_out[6] <= zk_prime_out.DB_MAX_OUTPUT_PORT_TYPE
zk_prime_out[7] <= zk_prime_out.DB_MAX_OUTPUT_PORT_TYPE


